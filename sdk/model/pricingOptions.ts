/**
 * LUSID API
 * # Introduction  This page documents the [LUSID APIs](https://www.lusid.com/api/swagger), which allows authorised clients to query and update their data within the LUSID platform.  SDKs to interact with the LUSID APIs are available in the following languages and frameworks:  * [C#](https://github.com/finbourne/lusid-sdk-csharp) * [Java](https://github.com/finbourne/lusid-sdk-java) * [JavaScript](https://github.com/finbourne/lusid-sdk-js) * [Python](https://github.com/finbourne/lusid-sdk-python) * [Angular](https://github.com/finbourne/lusid-sdk-angular)  The LUSID platform is made up of a number of sub-applications. You can find the API / swagger documentation by following the links in the table below.   | Application | Description | API / Swagger Documentation | | ----- | ----- | ---- | | LUSID | Open, API-first, developer-friendly investment data platform. | [Swagger](https://www.lusid.com/api/swagger/index.html) | | Web app | User-facing front end for LUSID. | [Swagger](https://www.lusid.com/app/swagger/index.html) | | Scheduler | Automated job scheduler. | [Swagger](https://www.lusid.com/scheduler2/swagger/index.html) | | Insights |Monitoring and troubleshooting service. | [Swagger](https://www.lusid.com/insights/swagger/index.html) | | Identity | Identity management for LUSID (in conjuction with Access) | [Swagger](https://www.lusid.com/identity/swagger/index.html) | | Access | Access control for LUSID (in conjunction with Identity) | [Swagger](https://www.lusid.com/access/swagger/index.html) | | Drive | Secure file repository and manager for collaboration. | [Swagger](https://www.lusid.com/drive/swagger/index.html) | | Luminesce | Data virtualisation service (query data from multiple providers, including LUSID) | [Swagger](https://www.lusid.com/honeycomb/swagger/index.html) | | Notification | Notification service. | [Swagger](https://www.lusid.com/notifications/swagger/index.html) | | Configuration | File store for secrets and other sensitive information. | [Swagger](https://www.lusid.com/configuration/swagger/index.html) | 
 *
 * The version of the OpenAPI document: 0.11.3443
 * Contact: info@finbourne.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { ModelSelection } from './modelSelection';

/**
* Options for controlling the default aspects and behaviour of the pricing engine.
*/
export class PricingOptions {
    'modelSelection'?: ModelSelection;
    /**
    * If true then use the instrument type to set the default instrument pricer  This applies where no more specific set of overrides are provided on a per-vendor and instrument basis.
    */
    'useInstrumentTypeToDeterminePricer'?: boolean;
    /**
    * By default, one would not expect to price and exotic instrument, i.e. an instrument with a complicated  instrument definition simply through looking up a price as there should be a better way of evaluating it.  To override that behaviour and allow lookup for a price from the instrument identifier(s), set this to true.
    */
    'allowAnyInstrumentsWithSecUidToPriceOffLookup'?: boolean;
    /**
    * If true then a failure in task evaluation doesn\'t cause overall failure.  results will be returned where they succeeded and annotation elsewhere
    */
    'allowPartiallySuccessfulEvaluation'?: boolean;
    /**
    * If true (default), when pricing an Fx-Forward or Interest Rate Swap, Future and other linearly separable products, product two results, one for each leg  rather than a single line result with the amalgamated/summed pv from both legs.
    */
    'produceSeparateResultForLinearOtcLegs'?: boolean;
    /**
    * If true, when pricing using a model or for an instrument that supports use of intermediate cached-results, use them.  Default is that this caching is turned off.
    */
    'enableUseOfCachedUnitResults'?: boolean;
    /**
    * If true, when valuing an instrument outside the period where it is \'alive\' (the start-maturity window) it will return a valuation of zero
    */
    'windowValuationOnInstrumentStartEnd'?: boolean;
    /**
    * When creating a payment diary, should contingent cash payments (e.g. from exercise of a swaption into a swap) be included or not.  i.e. Is exercise or default being assumed to happen or not.
    */
    'removeContingentCashflowsInPaymentDiary'?: boolean;
    /**
    * Should fund constituents inherit subholding keys from the parent subholding keyb
    */
    'useChildSubHoldingKeysForPortfolioExpansion'?: boolean;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "modelSelection",
            "baseName": "modelSelection",
            "type": "ModelSelection"
        },
        {
            "name": "useInstrumentTypeToDeterminePricer",
            "baseName": "useInstrumentTypeToDeterminePricer",
            "type": "boolean"
        },
        {
            "name": "allowAnyInstrumentsWithSecUidToPriceOffLookup",
            "baseName": "allowAnyInstrumentsWithSecUidToPriceOffLookup",
            "type": "boolean"
        },
        {
            "name": "allowPartiallySuccessfulEvaluation",
            "baseName": "allowPartiallySuccessfulEvaluation",
            "type": "boolean"
        },
        {
            "name": "produceSeparateResultForLinearOtcLegs",
            "baseName": "produceSeparateResultForLinearOtcLegs",
            "type": "boolean"
        },
        {
            "name": "enableUseOfCachedUnitResults",
            "baseName": "enableUseOfCachedUnitResults",
            "type": "boolean"
        },
        {
            "name": "windowValuationOnInstrumentStartEnd",
            "baseName": "windowValuationOnInstrumentStartEnd",
            "type": "boolean"
        },
        {
            "name": "removeContingentCashflowsInPaymentDiary",
            "baseName": "removeContingentCashflowsInPaymentDiary",
            "type": "boolean"
        },
        {
            "name": "useChildSubHoldingKeysForPortfolioExpansion",
            "baseName": "useChildSubHoldingKeysForPortfolioExpansion",
            "type": "boolean"
        }    ];

    static getAttributeTypeMap() {
        return PricingOptions.attributeTypeMap;
    }
}

